package $target.package;

public class $target.simpleName implements $source.fullName {

private final com.github.mhdirkse.codegen.runtime.HandlerStack<$handler.fullName> delegate;

public $target.simpleName (final $handler.fullName ... firstHandlers) {
  this.delegate = new com.github.mhdirkse.codegen.runtime.HandlerStack<>();
  for ($handler.fullName firstHandler : firstHandlers) {
    this.delegate.addFirst(firstHandler);
  }
}
 
#foreach ($method in $target.methods)
@Override
public void $method.name ($method.formalParametersClass) {
  try {
      delegate.run(new com.github.mhdirkse.codegen.runtime.HandlerRunner<$handler.fullName>() {
        @Override
        public boolean run($handler.fullName handler, com.github.mhdirkse.codegen.runtime.HandlerStackContext<$handler.fullName> ctx) {
          return handler.$method.name ($method.getActualParametersWith("ctx") );
        }
      });
  } catch (com.github.mhdirkse.codegen.runtime.NotHandledException e) {
      throw new com.github.mhdirkse.codegen.runtime.NotHandledException("Method not handled: " + "$method.name", e);
  }
}
#end
}